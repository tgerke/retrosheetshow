% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_events.R
\name{get_events}
\alias{get_events}
\title{Download and Parse Retrosheet Event Files}
\usage{
get_events(
  events = NULL,
  year = NULL,
  type = "regular",
  parse = TRUE,
  verbose = TRUE
)
}
\arguments{
\item{events}{Optional tibble from \code{list_events()}. If provided, downloads
all files specified in the tibble. If NULL, uses \code{year} and \code{type} parameters.}

\item{year}{Numeric vector of years to download. Ignored if \code{events} is provided.}

\item{type}{Character vector of event types ("regular", "allstar", "post").
Default is "regular". Ignored if \code{events} is provided.}

\item{parse}{Logical. If TRUE (default), parses the event files into a tibble.
If FALSE, returns raw text content.}

\item{verbose}{Logical. If TRUE (default), displays progress messages.}
}
\value{
A tibble containing the parsed event data with columns depending on
the record type. Common columns include:
\itemize{
\item \code{game_id} - Unique game identifier
\item \code{record_type} - Type of record (id, version, info, start, play, sub, etc.)
\item \code{year} - Year of the game
\item \code{type} - Type of event file (regular, allstar, post)
}
}
\description{
Downloads Retrosheet event files and parses them into a tidy tibble format.
This function can accept either a tibble from \code{list_events()} or direct
parameters to specify which files to download.
}
\details{
Retrosheet event files contain play-by-play data in a structured text format.
Each line represents a different type of record (game info, starting lineups,
plays, substitutions, etc.). This function downloads the files and parses them
into a tidy format suitable for analysis.
\subsection{Caching}{

Downloaded files are cached by default to speed up repeated access. The first
download may take 1-2 minutes, but subsequent calls will be much faster (seconds).
Use \code{cache_status()} to view cached files and \code{clear_cache()} to remove them.
Disable caching with \code{use_cache(FALSE)}.
}
}
\examples{
\dontrun{
# Download and parse specific years
events_2024 <- get_events(year = 2024)

# Use with list_events() in a pipe
recent_games <- list_events(year = 2020:2024) |>
  get_events()

# Download multiple types
postseason_2023 <- get_events(year = 2023, type = "post")

# Get raw data without parsing
raw_data <- get_events(year = 2024, parse = FALSE)
}

}
